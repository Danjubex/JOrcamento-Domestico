/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * INTERFACE.java
 *
 * Created on 11/05/2012, 18:12:46
 */
package orcamento;

/**
 *
 * @author Braz
 */

import grafico.Graficos;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;// classe para criar um arquivo

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.awt.event.*;

import java.io.FileReader;
import java.io.BufferedReader;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import orcamento.quadros.Ajuda;
import orcamento.quadros.Editar;
import orcamento.quadros.Extras;
import orcamento.quadros.Gastos;
import orcamento.quadros.Login;
import orcamento.quadros.Valores;
import propriedades.Propriedades;



public class INTERFACE extends javax.swing.JFrame {

    public int lookAndFeel;
    public INTERFACE(Propriedades prop,Boolean carregarInicio) {
        initComponents();
        setLocationRelativeTo(null);
        this.setPreferredSize(new Dimension(786,486));
        
        this.prop=prop;
        Salario=Double.parseDouble(prop.getPropriedade("salario"));
        Porcentagem= Double.parseDouble(prop.getPropriedade("poupanca"))/100;
        
        if(carregarInicio)
        {
            this.carregarActionPerformed(null);//carrega os dados caso faça login
            carregarInicio=true;
        }
        else
            carregarInicio=false;
               
        ImageIcon icon = new ImageIcon(getClass().getResource("icone.png")); 
        super.setIconImage(icon.getImage()); 
       
        lookAndFeel=Integer.parseInt(prop.getPropriedade("lookAndFeel"));
        this.AparenciaActionPerformed(null);
        
         }
    
   
    File dados;
    FileReader leitor; 
    BufferedReader bf;
    
    
    
    JFrame recipiente=new JFrame();
    //ValoresTabela vt=new ValoresTabela();
    
   public static Boolean carregarInicio=false;//habilita o carregamento
   Valores vl;
   Extras extras;
   Gastos gastos;
   Graficos tools=new Graficos();
   Editar editar;
   private static Propriedades prop; 
   Login login=new Login(recipiente,true); 
   
   
    EscreverArquivo ea= new EscreverArquivo();
    Ler ler= new Ler();
   
  
    
   
    
    private double Salario;
    private double Porcentagem;
    private double poupancaMensal;
    private double extraMensal;
    private double gastoMensal;
    private double salarioMensal;
    private double livre;
    private double saldo=0;
    
    
    
  
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        escrever = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        addLinha = new javax.swing.JButton();
        remover = new javax.swing.JButton();
        removerAll = new javax.swing.JButton();
        Visualizar = new javax.swing.JPanel();
        objetivo = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        painelG = new javax.swing.JPanel();
        graphLabel = new javax.swing.JLabel();
        carregar = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        InserirGasto = new javax.swing.JButton();
        BExtras = new javax.swing.JButton();
        Graficos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jToolBar3 = new javax.swing.JToolBar();
        BAjuda = new javax.swing.JButton();
        Aparencia = new javax.swing.JButton();
        mensagem = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        novo = new javax.swing.JMenu();
        NOVO = new javax.swing.JMenuItem();
        Abrir = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Logout = new javax.swing.JMenuItem();
        Fechar = new javax.swing.JMenuItem();
        Preferencias = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JOrçamento Basic 1.0 ");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(786, 486));

        escrever.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/survey.png"))); // NOI18N
        escrever.setToolTipText("Salvar os dados");
        escrever.setBorder(null);
        escrever.setBorderPainted(false);
        escrever.setEnabled(false);
        escrever.setFocusPainted(false);
        escrever.setFocusable(false);
        escrever.setOpaque(false);
        escrever.setRequestFocusEnabled(false);
        escrever.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/papel-mov.gif"))); // NOI18N
        escrever.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escreverActionPerformed(evt);
            }
        });

        jToolBar1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jToolBar1.setFloatable(false);
        jToolBar1.setEnabled(false);

        addLinha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Button Add_32.png"))); // NOI18N
        addLinha.setToolTipText("Adiciona uma nova linha");
        addLinha.setBorderPainted(false);
        addLinha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addLinha.setFocusPainted(false);
        addLinha.setFocusable(false);
        addLinha.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addLinha.setMinimumSize(new java.awt.Dimension(14, 16));
        addLinha.setName(""); // NOI18N
        addLinha.setOpaque(false);
        addLinha.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addLinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLinhaActionPerformed(evt);
            }
        });
        jToolBar1.add(addLinha);

        remover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Button Delete_32.png"))); // NOI18N
        remover.setToolTipText("Apagar última linha");
        remover.setBorderPainted(false);
        remover.setFocusable(false);
        remover.setOpaque(false);
        remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerActionPerformed(evt);
            }
        });
        jToolBar1.add(remover);

        removerAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Button Close_32.png"))); // NOI18N
        removerAll.setToolTipText("Deleta todas as linhas");
        removerAll.setBorderPainted(false);
        removerAll.setFocusable(false);
        removerAll.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removerAll.setOpaque(false);
        removerAll.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removerAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerAllActionPerformed(evt);
            }
        });
        jToolBar1.add(removerAll);

        Visualizar.setBorder(javax.swing.BorderFactory.createTitledBorder("Visualizar"));

        tabela.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mês/Ano", "Salário", "Extras", "Contas/Gastos", "Poupança", "Livre", "Sld. Acumulativo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tabela);

        objetivo.addTab("Tabela", jScrollPane3);

        painelG.setToolTipText("");
        painelG.setLayout(new java.awt.BorderLayout());

        graphLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        graphLabel.setText("Para visualizar o gráfico, pressione o botão GRÁFICO na barra de ferramentas");
        painelG.add(graphLabel, java.awt.BorderLayout.CENTER);

        objetivo.addTab("Gráfico", painelG);

        javax.swing.GroupLayout VisualizarLayout = new javax.swing.GroupLayout(Visualizar);
        Visualizar.setLayout(VisualizarLayout);
        VisualizarLayout.setHorizontalGroup(
            VisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VisualizarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(objetivo, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                .addContainerGap())
        );
        VisualizarLayout.setVerticalGroup(
            VisualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VisualizarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(objetivo, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addGap(41, 41, 41))
        );

        carregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/database.png"))); // NOI18N
        carregar.setToolTipText("carrega os dados");
        carregar.setBorderPainted(false);
        carregar.setEnabled(false);
        carregar.setFocusable(false);
        carregar.setOpaque(false);
        carregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarActionPerformed(evt);
            }
        });

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);
        jToolBar2.setBorderPainted(false);

        InserirGasto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Money-32.png"))); // NOI18N
        InserirGasto.setToolTipText("Adicionar novo gasto");
        InserirGasto.setBorderPainted(false);
        InserirGasto.setFocusable(false);
        InserirGasto.setOpaque(false);
        InserirGasto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InserirGastoActionPerformed(evt);
            }
        });
        jToolBar2.add(InserirGasto);

        BExtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Money-bag-32.png"))); // NOI18N
        BExtras.setToolTipText("Adiciona novo extra");
        BExtras.setBorderPainted(false);
        BExtras.setFocusable(false);
        BExtras.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BExtras.setOpaque(false);
        BExtras.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BExtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BExtrasActionPerformed(evt);
            }
        });
        jToolBar2.add(BExtras);

        Graficos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/graph.png"))); // NOI18N
        Graficos.setToolTipText("Atualiza o gráfico");
        Graficos.setBorderPainted(false);
        Graficos.setFocusable(false);
        Graficos.setOpaque(false);
        Graficos.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/graph-mov.gif"))); // NOI18N
        Graficos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraficosActionPerformed(evt);
            }
        });
        jToolBar2.add(Graficos);

        jLabel1.setText("jLabel1");

        jToolBar3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);

        BAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Button Help_32.png"))); // NOI18N
        BAjuda.setToolTipText("Ajuda");
        BAjuda.setBorderPainted(false);
        BAjuda.setFocusable(false);
        BAjuda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BAjuda.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAjudaActionPerformed(evt);
            }
        });
        jToolBar3.add(BAjuda);

        Aparencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/piechart.png"))); // NOI18N
        Aparencia.setToolTipText("Mudar o layout");
        Aparencia.setBorderPainted(false);
        Aparencia.setFocusable(false);
        Aparencia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Aparencia.setOpaque(false);
        Aparencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Aparencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AparenciaActionPerformed(evt);
            }
        });
        jToolBar3.add(Aparencia);

        mensagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add-32.png"))); // NOI18N
        mensagem.setText("Mensagem");
        mensagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mensagemActionPerformed(evt);
            }
        });

        jMenuBar1.setFont(new java.awt.Font("DokChampa", 0, 12));

        novo.setText("Arquivo");

        NOVO.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        NOVO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Edit-32.png"))); // NOI18N
        NOVO.setText("Novo");
        NOVO.setToolTipText("Cria um novo local de armazenamento");
        NOVO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NOVOActionPerformed(evt);
            }
        });
        novo.add(NOVO);

        Abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        Abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cabinet.png"))); // NOI18N
        Abrir.setText("Abrir");
        Abrir.setToolTipText("Abre um arquivo de armazenamento");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });
        novo.add(Abrir);
        novo.add(jSeparator1);

        Logout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, java.awt.event.InputEvent.CTRL_MASK));
        Logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lock.png"))); // NOI18N
        Logout.setText("Logout");
        Logout.setToolTipText("Permite a troca de usuário");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });
        novo.add(Logout);

        Fechar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        Fechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Button Close_32.png"))); // NOI18N
        Fechar.setText("Fechar");
        Fechar.setToolTipText("Finaliza programa");
        Fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecharActionPerformed(evt);
            }
        });
        novo.add(Fechar);

        jMenuBar1.add(novo);

        Preferencias.setText("Editar");
        Preferencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreferenciasActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/carteira.png"))); // NOI18N
        jMenuItem1.setText("Preferências");
        jMenuItem1.setToolTipText("Altera preferências de salário e poupança");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        Preferencias.add(jMenuItem1);

        jMenuBar1.add(Preferencias);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(escrever, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(carregar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(mensagem))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Visualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jToolBar2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mensagem)
                            .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Visualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(escrever)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(carregar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void addLinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLinhaActionPerformed
// TODO add your handling code here:
    vl= new Valores(recipiente,true,prop.getPropriedade("salario"));
   
    Controle.criarLinha(tabela);
       
    vl.setVisible(true);
    try// irá garantir que o usuário só coloque numeros
    {
        if(vl.modificou())
        {
         tabela.setValueAt(vl.getMes(),tabela.getRowCount()-1,0);
         tabela.setValueAt(vl.getSalario(),tabela.getRowCount()-1,1);
         tabela.setValueAt(vl.getExtras(),tabela.getRowCount()-1,2);
         tabela.setValueAt(vl.getGastos(),tabela.getRowCount()-1,3);
         vl.limpar();
    
   escrever.setEnabled(true);
 
   carregar.setEnabled(false);
   
   
   
   
   
   int i=tabela.getRowCount()-1;
       
        
        salarioMensal = Double.parseDouble(String.valueOf(tabela.getValueAt(i, 1)));
        gastoMensal= Double.parseDouble(String.valueOf(tabela.getValueAt(i,3)));
        extraMensal=Double.parseDouble(String.valueOf(tabela.getValueAt(i,2)));
        
         poupancaMensal=Math.round((salarioMensal +  extraMensal - gastoMensal)
                                    *Porcentagem) ;
         tabela.setValueAt(poupancaMensal,i,4);//coloca a poupança
        
        
        
        
        livre=(salarioMensal +  extraMensal - gastoMensal)>0
        ?(salarioMensal +  extraMensal - gastoMensal-poupancaMensal)
        :0;
        
         
        
        tabela.setValueAt(livre,i,5);
        
        
             saldo=tabela.getRowCount()>1
                
             ?Double.parseDouble(""+tabela.getValueAt(tabela.getRowCount()-2,6))
             :0;
           
        
        saldo=saldo+(salarioMensal +  extraMensal - gastoMensal);
        tabela.setValueAt(saldo,i,6);    
        
        if(poupancaMensal<=0)
        {
            tabela.setValueAt(0,i,4);
            
        }
       
        
   
  saldo=0;
 }//fim do primeiro se
    else
        Controle.removerLinha(tabela);
 }//fim do try
    catch(NumberFormatException e)
    {
        JOptionPane.showMessageDialog(INTERFACE.this,"Insira somente números e preencha todos os campos");
        Controle.removerLinha(tabela);
    }
}//GEN-LAST:event_addLinhaActionPerformed

private void escreverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escreverActionPerformed
             
             
             this.dados = new File(prop.getPropriedade("caminho"));
        try {
            dados.createNewFile();
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"O sistema está impedindo o programa de criar um novo arquivo"
                    + "em: "+prop.getPropriedade("caminho"));
        }
             
             
            if(dados.delete()==true)
            {            
               

     try {
          
            for(int i=0;i<tabela.getRowCount();i++)
            {
               for(int j=0;j<tabela.getColumnCount();j++)
                {
                    
                    ea.escrever(dados,tabela.getValueAt(i, j));
                }
               ea.pularLinha(dados);
            }
            
            escrever.setEnabled(false);
            JOptionPane.showMessageDialog(null,"Os dados foram salvos com sucesso!");
          }
             catch (IOException ex) 
             {
                JOptionPane.showMessageDialog(null,"Arquivo Inexistente, Código de erro 0001, informe "
                        + "o código à central de atendimento pelo e-mail xxx@xxx.com");
                
             } 
        }
            else
            {
                JOptionPane.showMessageDialog(null,"Não foi possível salvar os dados, tente novamente em alguns minutos");
            }
             
}//GEN-LAST:event_escreverActionPerformed

private void carregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarActionPerformed

    
                escrever.setEnabled(true);



        String[][] linhas=new String[30000][];



        this.dados = new File(prop.getPropriedade("caminho"));    


                // TODO add your handling code here:

                try {

                    ler.lerAll(dados, linhas);

                   for(int i=0;linhas[i]!=null;i++)
                   {
                     Controle.criarLinha(tabela);
                    for(int j=0;j<tabela.getColumnCount();j++)
                    {

                        tabela.setValueAt(linhas[i][j], i, j);
                    }

                   }
                    carregar.setEnabled(false);  
                 } catch (IOException ex) {

                    Logger.getLogger(INTERFACE.class.getName()).log(Level.SEVERE, null, ex);
                }   
    
}//GEN-LAST:event_carregarActionPerformed

private void removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerActionPerformed
// TODO add your handling code here:
    Controle.removerLinha(tabela);
    if(tabela.getRowCount()==0)
    {
        carregar.setEnabled(true);
        escrever.setEnabled(false);
    }
                                                                                                                
}//GEN-LAST:event_removerActionPerformed

private void removerAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerAllActionPerformed
// TODO add your handling code here:
    Controle.removerAll(tabela);
    carregar.setEnabled(true);
    escrever.setEnabled(false);
}//GEN-LAST:event_removerAllActionPerformed

private void InserirGastoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InserirGastoActionPerformed
    gastos= new Gastos(recipiente,true);
    gastos.setList(tabela);
    gastos.setVisible(true);
try
{
 if(gastos.modificou())
 {
    String valor=""+tabela.getValueAt(gastos.getMes(),3);
//acrescentando gastos ao que ja existe na tabela    
    tabela.setValueAt(Double.parseDouble(valor) + gastos.getGasto(),gastos.getMes(),3);
    
    Double DINHEIRO=gastos.getGasto() - Double.parseDouble(""+tabela.getValueAt(gastos.getMes(),5));
//diminuindo do livre o novo gasto    
    tabela.setValueAt(Double.parseDouble(""+tabela.getValueAt(gastos.getMes(),5))
      -gastos.getGasto()>0
      ?Double.parseDouble(""+tabela.getValueAt(gastos.getMes(),5))
      -gastos.getGasto():0
      ,gastos.getMes(),5);
    
    
//diminuindo da poupança  
    if(Double.parseDouble(""+tabela.getValueAt(gastos.getMes(),5))==0)
    {       
       tabela.setValueAt(Double.parseDouble(""+tabela.getValueAt(gastos.getMes(),4))
      -DINHEIRO>0
      ?Double.parseDouble(""+tabela.getValueAt(gastos.getMes(),4))
      -DINHEIRO:0
      ,gastos.getMes(),4);
    }
   
//diminuindo do saldo     
     for(int i=gastos.getMes();i<tabela.getRowCount();i++)
     {
     tabela.setValueAt(Double.parseDouble(""+tabela.getValueAt(i,6))
      -gastos.getGasto()
      ,i,6);
     }
    
    
    
    gastos.limpar();
    
  }
}
catch(NumberFormatException e)
{
 JOptionPane.showMessageDialog(INTERFACE.this,"Insira somente números e preencha todos os campos");
}
    
    
}//GEN-LAST:event_InserirGastoActionPerformed

private void GraficosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraficosActionPerformed
// TODO add your handling code here:
   tools.limpar();
   for(int i=0;i<tabela.getRowCount();i++)
   {
//       setando os gastos de todos os meses;
       tools.setDataSet(Double.parseDouble(""+tabela.getValueAt(i,3)), "Gastos",""+tabela.getValueAt(i, 0));
//       setando os extras de todos os meses;       
       tools.setDataSet(Double.parseDouble(""+tabela.getValueAt(i,2)),"Extras",""+tabela.getValueAt(i, 0));
//       setando o salário mensal       
       tools.setDataSet(Double.parseDouble(""+tabela.getValueAt(i,1)),"Salário",""+tabela.getValueAt(i, 0));
       
       tools.setDataSet(Double.parseDouble(""+tabela.getValueAt(i,4)),"Poupança",""+tabela.getValueAt(i, 0));
       
       tools.setDataSet(Double.parseDouble(""+tabela.getValueAt(i,5)),"Livre",""+tabela.getValueAt(i, 0));
       
       tools.setDataSet(Double.parseDouble(""+tabela.getValueAt(i,6)),"Saldo",""+tabela.getValueAt(i, 0));
   } 

tools.gerarGrafico(painelG);
graphLabel.setVisible(false);



}//GEN-LAST:event_GraficosActionPerformed

private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
JFileChooser abrir = new JFileChooser();  
String caminho;    
int retorno = abrir.showOpenDialog(null);
    
               if (retorno==JFileChooser.APPROVE_OPTION)//se a pessoa escolher abrir
               {
                      caminho = abrir.getSelectedFile().getAbsolutePath();
                      prop.setPropriedade("caminho", caminho);
                      prop.registrar();
                      carregar.setEnabled(true);
                      escrever.setEnabled(false);
               }
               
}//GEN-LAST:event_AbrirActionPerformed

private void NOVOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NOVOActionPerformed
JFileChooser abrir = new JFileChooser();  
String caminho;    
int retorno = abrir.showSaveDialog(null);
    
               if (retorno==JFileChooser.APPROVE_OPTION)//se a pessoa escolher abrir
               {
                      caminho =abrir.getSelectedFile().getAbsolutePath()+".txt";
                      prop.setPropriedade("caminho", caminho);
                      prop.registrar();
                      carregar.setEnabled(false);
                      escrever.setEnabled(true);
               }
}//GEN-LAST:event_NOVOActionPerformed

private void BExtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BExtrasActionPerformed
    extras=new Extras(recipiente,true);
    extras.setList(tabela);
    extras.setVisible(true);
 try
   {
       if(extras.modificou())
       {
            String valor=""+tabela.getValueAt(extras.getMes(),2);
        //acrescentando extras ao que ja existe na tabela    
            tabela.setValueAt(Double.parseDouble(valor) + extras.getExtras(),extras.getMes(),2);

            Double DINHEIRO=extras.getExtras() + Double.parseDouble(""+tabela.getValueAt(extras.getMes(),5));
        //aumentando o livre    
            tabela.setValueAt(Double.parseDouble(""+tabela.getValueAt(extras.getMes(),5))
              +extras.getExtras()
              ,extras.getMes(),5);


        //aumentando da poupança  
            if(Double.parseDouble(""+tabela.getValueAt(extras.getMes(),5))==0)
            {       
               tabela.setValueAt(Double.parseDouble(""+tabela.getValueAt(extras.getMes(),4))
              +DINHEIRO
              ,extras.getMes(),4);
            }

        //aumentando do saldo     
             for(int i=extras.getMes();i<tabela.getRowCount();i++)
             {
             tabela.setValueAt(Double.parseDouble(""+tabela.getValueAt(i,6))
              +extras.getExtras()
              ,i,6);
             }

            extras.limpar();
       }
   }
    catch(NumberFormatException e)
    {
        JOptionPane.showMessageDialog(INTERFACE.this,"Insira somente números e preencha todos os campos");
    }
}//GEN-LAST:event_BExtrasActionPerformed

private void PreferenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreferenciasActionPerformed
    
}//GEN-LAST:event_PreferenciasActionPerformed

private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    editar= new Editar(recipiente,true,prop);//criar nova referencia
    editar.setVisible(true);
if(editar.modificou())
{
    prop.setPropriedade("poupanca",editar.getPoupanca().replace(",","."));
    prop.setPropriedade("salario",editar.getSalario().replace(",","."));
    prop.registrar();
    Porcentagem= Double.parseDouble(prop.getPropriedade("poupanca"))/100;
}
}//GEN-LAST:event_jMenuItem1ActionPerformed

private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
    this.dispose();
    login.setVisible(true);
    
}//GEN-LAST:event_LogoutActionPerformed

private void FecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharActionPerformed
System.exit(0);
}//GEN-LAST:event_FecharActionPerformed

private void BAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAjudaActionPerformed
Ajuda.mostrar();
}//GEN-LAST:event_BAjudaActionPerformed

private void AparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AparenciaActionPerformed
    String[] array={"Nimbus","Windows","Metal","Windows Classic"};
    
    if(lookAndFeel>3)
        lookAndFeel=0;

    
    
    
    try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (array[lookAndFeel].equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
             prop.setPropriedade("lookAndFeel",""+lookAndFeel);
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(INTERFACE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(INTERFACE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(INTERFACE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(INTERFACE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    
    prop.setPropriedade("lookAndFeel",""+lookAndFeel);
    lookAndFeel++;
    prop.registrar();
   
    
    
    SwingUtilities.updateComponentTreeUI(this);  
    pack();
    
}//GEN-LAST:event_AparenciaActionPerformed

    private void mensagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mensagemActionPerformed
       
        JOptionPane.showMessageDialog(INTERFACE.this,"Esta é uma mensagem de aviso!");
        
        
        
    }//GEN-LAST:event_mensagemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(INTERFACE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(INTERFACE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(INTERFACE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(INTERFACE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new INTERFACE(prop,carregarInicio).setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JButton Aparencia;
    private javax.swing.JButton BAjuda;
    private javax.swing.JButton BExtras;
    private javax.swing.JMenuItem Fechar;
    private javax.swing.JButton Graficos;
    private javax.swing.JButton InserirGasto;
    private javax.swing.JMenuItem Logout;
    private javax.swing.JMenuItem NOVO;
    private javax.swing.JMenu Preferencias;
    private javax.swing.JPanel Visualizar;
    private javax.swing.JButton addLinha;
    private javax.swing.JButton carregar;
    private javax.swing.JButton escrever;
    private javax.swing.JLabel graphLabel;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JButton mensagem;
    private javax.swing.JMenu novo;
    private javax.swing.JTabbedPane objetivo;
    private javax.swing.JPanel painelG;
    private javax.swing.JButton remover;
    private javax.swing.JButton removerAll;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
